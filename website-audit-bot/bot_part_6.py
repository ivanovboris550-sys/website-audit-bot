# bot_part_6.py - –ß–∞—Å—Ç—å 6/7 (–ø–µ—Ä–µ–ø–∏—Å–∞–Ω–∞ —Å –Ω—É–ª—è)
# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –º–µ–Ω—é

from telegram import Update, ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes
from urllib.parse import urlparse

# === –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ (–Ω–µ –º–µ–Ω—è–µ–º) ===
main_menu_keyboard = [
    ["üîç –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"],
    ["üí≥ –ë–∞–∑–æ–≤—ã–π –∞—É–¥–∏—Ç ‚Äî 300 —Ä—É–±"],
    ["üöÄ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –∞—É–¥–∏—Ç ‚Äî 700 —Ä—É–±"],
    ["üìå –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ ‚Äî 1000 —Ä—É–±/–º–µ—Å"],
    ["üìò –û –±–æ—Ç–µ", "‚≠ê –û—Ç–∑—ã–≤—ã"],
    ["‚ùì FAQ"]
]

# –ö–Ω–æ–ø–∫–∞ –æ–ø–ª–∞—Ç—ã ‚Äî —Ç–æ–ª—å–∫–æ –ÆMoney
payment_keyboard = InlineKeyboardMarkup([
    [InlineKeyboardButton("‚úÖ –û–ø–ª–∞—Ç–∏—Ç—å —á–µ—Ä–µ–∑ –ÆMoney", url="https://yoomoney.ru/to/4100119272378518")]
])

# === –ü—Ä–æ–≤–µ—Ä–∫–∞ URL ===
def is_valid_url(url):
    try:
        result = urlparse(url)
        return all([result.scheme, result.netloc])
    except:
        return False

# === –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ ===
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.strip()

    # === –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ ===
    if text == "üîç –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞":
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∞–π—Ç:")
        context.user_data['check_type'] = 'free'

    elif text == "üí≥ –ë–∞–∑–æ–≤—ã–π –∞—É–¥–∏—Ç ‚Äî 300 —Ä—É–±":
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∞–π—Ç –¥–ª—è –±–∞–∑–æ–≤–æ–≥–æ –∞—É–¥–∏—Ç–∞:")
        context.user_data['check_type'] = 'basic'

    elif text == "üöÄ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –∞—É–¥–∏—Ç ‚Äî 700 —Ä—É–±":
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∞–π—Ç –¥–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ –∞—É–¥–∏—Ç–∞:")
        context.user_data['check_type'] = 'advanced'

    elif text == "üìå –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ ‚Äî 1000 —Ä—É–±/–º–µ—Å":
        await update.message.reply_text(
            "üìå <b>–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ ‚Äî 1000 —Ä—É–±/–º–µ—Å</b>\n"
            "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç\n"
            "‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏ –ø–∞–¥–µ–Ω–∏–∏\n"
            "üí≥ <b>–û–ø–ª–∞—Ç–∞:</b> –ÆMoney: <code>4100 1192 7237 8518</code>\n"
            "üì§ –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ø—Ä–∏—à–ª–∏—Ç–µ —á–µ–∫ –Ω–∞ Iv.vboris@yandex.ru",
            parse_mode='HTML',
            reply_markup=payment_keyboard
        )

    elif text == "üìò –û –±–æ—Ç–µ":
        await update.message.reply_text(
            "ü§ñ <b>Website Audit Bot</b>\n\n"
            "–ü—Ä–æ–≤–µ—Ä—è—é —Å–∞–π—Ç—ã –Ω–∞ SEO, –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å.\n\n"
            "üîπ –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞\n"
            "üîπ –ë–∞–∑–æ–≤—ã–π –∏ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –∞—É–¥–∏—Ç\n"
            "üîπ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ 24/7",
            parse_mode='HTML'
        )

    elif text == "‚≠ê –û—Ç–∑—ã–≤—ã":
        await update.message.reply_text(
            "‚≠ê <b>–û—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤</b>\n\n"
            "<i>¬´–¢—Ä–∞—Ñ–∏–∫ –≤—ã—Ä–æ—Å –Ω–∞ 30% –ø–æ—Å–ª–µ –∞—É–¥–∏—Ç–∞¬ª</i> ‚Äî @client3\n"
            "<i>¬´–£–≤–µ–¥–æ–º–∏–ª–∏ –æ –ø–∞–¥–µ–Ω–∏–∏ –∑–∞ 5 –º–∏–Ω—É—Ç¬ª</i> ‚Äî @client2\n\n"
            "üí¨ –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞ Iv.vboris@yandex.ru ‚Äî –¥–æ–±–∞–≤–ª—é –≤–∞—à –æ—Ç–∑—ã–≤!",
            parse_mode='HTML'
        )

    elif text == "‚ùì FAQ":
        await update.message.reply_text(
            "‚ùì <b>–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã</b>\n\n"
            "<b>–ö–æ–≥–¥–∞ –ø—Ä–∏—à–ª—é—Ç –æ—Ç—á—ë—Ç?</b>\n"
            "–í —Ç–µ—á–µ–Ω–∏–µ 1 —á–∞—Å–∞ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã.\n\n"
            "<b>–†–∞–±–æ—Ç–∞–µ—Ç –ª–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ 24/7?</b>\n"
            "–î–∞, –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç.",
            parse_mode='HTML'
        )

    # === –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥—ë–Ω–Ω–æ–≥–æ URL ===
    elif context.user_data.get('check_type') in ['free', 'basic', 'advanced']:
        if not is_valid_url(text):
            await update.message.reply_text("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL. –ü—Ä–∏–º–µ—Ä: https://example.com")
            return

        url = text
        check_type = context.user_data['check_type']

        # –ò–º–ø–æ—Ä—Ç—ã (—á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º)
        from bot_part_2 import check_website, check_ssl

        # –í—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
        result = check_website(url)
        ssl_result = check_ssl(url)

        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
        message = (
            f"üìä <b>–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏</b>\n"
            f"üîπ <b>–°–∞–π—Ç:</b> {result['url']}\n"
            f"‚úÖ <b>–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å:</b> {result['status']}\n"
            f"‚è± <b>–°–∫–æ—Ä–æ—Å—Ç—å:</b> {result.get('load_time', 'N/A')}\n"
            f"üîê <b>SSL:</b> {'‚úÖ –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω' if ssl_result.get('valid') else '‚ùå –ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω'}"
        )

        await update.message.reply_text(message, parse_mode='HTML')

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–ø–ª–∞—Ç—É –¥–ª—è –ø–ª–∞—Ç–Ω—ã—Ö –∞—É–¥–∏—Ç–æ–≤
        if check_type in ['basic', 'advanced']:
            payment_info = (
                f"{'üöÄ' if check_type == 'advanced' else 'üí≥'} <b>–ê—É–¥–∏—Ç ‚Äî {700 if check_type == 'advanced' else 300} —Ä—É–±</b>\n"
                "‚úÖ –í–∫–ª—é—á–∞–µ—Ç –ø–æ–ª–Ω—ã–π SEO-–∞–Ω–∞–ª–∏–∑\n\n"
                "üí≥ <b>–û–ø–ª–∞—Ç–∞:</b> –ÆMoney: <code>4100 1192 7237 8518</code>\n\n"
                "üì§ <b>–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã:</b>\n"
                "1. –°–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞\n"
                "2. –ù–∞ email: <code>Iv.vboris@yandex.ru</code>\n"
                "3. –£–∫–∞–∑–∞—Ç—å: —Å—Å—ã–ª–∫—É –∏ –∫—É–¥–∞ –≤—ã—Å–ª–∞—Ç—å –æ—Ç—á—ë—Ç"
            )
            await update.message.reply_text(payment_info, parse_mode='HTML', reply_markup=payment_keyboard)

        # –û—á–∏—Å—Ç–∫–∞
        context.user_data.clear()

    # === –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ ===
    else:
        await update.message.reply_text(
            "üî¥ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –º–µ–Ω—é.",
            reply_markup=ReplyKeyboardMarkup(main_menu_keyboard, resize_keyboard=True)
        )
