# bot_part_7.py - –ß–∞—Å—Ç—å 7/7
# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞, –∞–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥—ã

import asyncio
import logging
import sys
import os
from datetime import datetime

from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è ===
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# === –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ app (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ) ===
app = None

# === –ü–æ–ø—ã—Ç–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ —á–∞—Å—Ç–µ–π –±–æ—Ç–∞ ===
try:
    from bot_part_1 import BOT_TOKEN, ADMIN_CHAT_ID, start
    logger.info("‚úÖ –ß–∞—Å—Ç—å 1/7: bot_part_1 –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
except ImportError as e:
    logger.critical(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ bot_part_1: {e}")
    sys.exit(1)

try:
    from bot_part_6 import handle_message
    logger.info("‚úÖ –ß–∞—Å—Ç—å 6/7: bot_part_6 –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
except ImportError as e:
    logger.critical(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ bot_part_6: {e}")
    sys.exit(1)


# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ ===
async def error_handler(update: object, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–õ–æ–≥–∏—Ä—É–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏—è, –≤–æ–∑–Ω–∏–∫–∞—é—â–∏–µ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π."""
    if isinstance(update, Update):
        user = update.effective_user
        chat_id = update.effective_chat.id
        message = f"‚ùóÔ∏è –û—à–∏–±–∫–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{user.username} ({chat_id}): {context.error}"
    else:
        message = f"‚ùóÔ∏è –§–∞—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞: {context.error}"

    logger.error(message, exc_info=context.error)


# === –ö–æ–º–∞–Ω–¥–∞ /admin (–¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É) ===
async def admin_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id != ADMIN_CHAT_ID:
        await update.message.reply_text("üö´ –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")
        return

    stats_file = "bot_stats.csv"
    if os.path.exists(stats_file):
        try:
            with open(stats_file, 'rb') as f:
                await context.bot.send_document(
                    chat_id=update.effective_chat.id,
                    document=f,
                    filename="—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞_–±–æ—Ç–∞.csv",
                    caption="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞"
                )
        except Exception as e:
            await update.message.reply_text(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª: {e}")
    else:
        await update.message.reply_text("üìÇ –§–∞–π–ª —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω.")


# === –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ ===
async def main():
    """–°–æ–∑–¥–∞—ë—Ç Application –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç polling."""
    global app

    try:
        # –î–ª—è Windows
        if sys.platform == 'win32':
            asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())

        # –°–æ–∑–¥–∞–Ω–∏–µ Application
        application = Application.builder().token(BOT_TOKEN).build()

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        application.add_handler(CommandHandler("start", start))
        application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
        application.add_handler(CommandHandler("admin", admin_command))
        application.add_error_handler(error_handler)

        logger.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥...")

        # –ó–∞–ø—É—Å–∫ polling
        await application.run_polling(
            drop_pending_updates=True,
            timeout=30
        )

    except Exception as e:
        logger.critical(f"üî¥ –§–∞—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
        raise


# === –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞ ===
if __name__ == "__main__":
    try:
        # –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é (Ctrl+C)")
    except Exception as e:
        logger.critical(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
