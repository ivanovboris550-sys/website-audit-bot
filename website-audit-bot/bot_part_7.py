# bot_part_7.py - –ß–∞—Å—Ç—å 7/7 (–§–ò–ù–ê–õ–¨–ù–´–ô –†–ê–ë–û–ß–ò–ô –í–ê–†–ò–ê–ù–¢)

from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
import asyncio
import logging
import sys

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è ===
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# === –ò–º–ø–æ—Ä—Ç –∏–∑ –¥—Ä—É–≥–∏—Ö —á–∞—Å—Ç–µ–π ===
try:
    from bot_part_1 import BOT_TOKEN, ADMIN_CHAT_ID
    logger.info("‚úÖ bot_part_1 –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
except ImportError as e:
    logger.critical(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ bot_part_1: {e}")
    sys.exit(1)

try:
    from bot_part_6 import handle_message
    logger.info("‚úÖ bot_part_6 –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
except ImportError as e:
    logger.critical(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ bot_part_6: {e}")
    sys.exit(1)


# === –ö–æ–º–∞–Ω–¥–∞ /admin_check (–¥–ª—è –∞–¥–º–∏–Ω–∞) ===
async def admin_check(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id == ADMIN_CHAT_ID:
        await update.message.reply_text("üü¢ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!")


# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ ===
async def error_handler(update: object, context: ContextTypes.DEFAULT_TYPE):
    logger.error(f"üî¥ –û—à–∏–±–∫–∞: {context.error}", exc_info=True)


# === –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ ===
async def main():
    """–°–æ–∑–¥–∞—ë—Ç Application –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç polling."""
    try:
        # –î–ª—è Windows
        if sys.platform == 'win32':
            asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())

        # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        app = Application.builder().token(BOT_TOKEN).build()

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        app.add_handler(CommandHandler("start", lambda u, c: handle_message(u, c)))
        app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
        app.add_handler(CommandHandler("admin_check", admin_check))
        app.add_error_handler(error_handler)

        logger.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥...")

        # –ó–∞–ø—É—Å–∫ polling
        await app.run_polling(
            drop_pending_updates=True,
            timeout=30
        )

    except Exception as e:
        logger.critical(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        raise


# === –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ===
if __name__ == "__main__":
    try:
        # –ï–î–ò–ù–°–¢–í–ï–ù–ù–´–ô –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–± –¥–ª—è v20+
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é.")
    except Exception as e:
        logger.critical(f"üíÄ –§–∞—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
