# bot_part_5.py - –ß–∞—Å—Ç—å 5/7
# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF-–æ—Ç—á—ë—Ç–æ–≤ —Å –ø–æ–º–æ—â—å—é fpdf2

from fpdf2 import FPDF
import os
from datetime import datetime
import base64
from io import BytesIO

# === –ö–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è PDF ===
class AuditPDF(FPDF):
    def header(self):
        self.set_font('Arial', 'B', 12)
        self.cell(0, 10, '–ê–Ω–∞–ª–∏–∑ —Å–∞–π—Ç–∞ ‚Äî –û—Ç—á—ë—Ç', ln=True, align='C')
        self.ln(5)

    def footer(self):
        self.set_y(-15)
        self.set_font('Arial', 'I', 8)
        self.cell(0, 10, f'–°—Ç—Ä–∞–Ω–∏—Ü–∞ {self.page_no()}', align='C')

    def add_title(self, text):
        self.set_font('Arial', 'B', 14)
        self.set_text_color(0, 0, 0)
        self.cell(0, 10, text, ln=True)
        self.ln(5)

    def add_subtitle(self, text):
        self.set_font('Arial', 'B', 12)
        self.set_text_color(0, 51, 102)
        self.cell(0, 8, text, ln=True)
        self.ln(3)

    def add_paragraph(self, text):
        self.set_font('Arial', '', 10)
        self.set_text_color(0, 0, 0)
        self.multi_cell(0, 6, text)
        self.ln(4)

    def add_code_block(self, text):
        self.set_font('Courier', '', 9)
        self.set_text_color(128, 0, 0)
        self.multi_cell(0, 5, text)
        self.ln(4)

    def add_result_row(self, label, value, status=""):
        self.set_font('Arial', '', 10)
        self.cell(70, 6, label, border=1)
        self.cell(80, 6, str(value), border=1)
        if status == "‚úÖ":
            self.set_text_color(0, 128, 0)
        elif status == "‚ùå":
            self.set_text_color(255, 0, 0)
        else:
            self.set_text_color(0, 0, 0)
        self.cell(30, 6, status, border=1, ln=True)
        self.set_text_color(0, 0, 0)

    def add_image_from_base64(self, img_data, title=""):
        if not img_data:
            return
        try:
            # –î–µ–∫–æ–¥–∏—Ä—É–µ–º base64
            img_bytes = base64.b64decode(img_data.split(",")[1])
            img_buffer = BytesIO(img_bytes)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            temp_path = "/tmp/chart_temp.png"
            with open(temp_path, "wb") as f:
                f.write(img_buffer.read())
            img_buffer.seek(0)

            # –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ PDF
            self.image(temp_path, x=10, w=180)
            os.remove(temp_path)  # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            self.ln(5)
        except Exception as e:
            self.add_paragraph(f"‚ö† –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞: {str(e)}")
            self.ln(5)


# === –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –∞—É–¥–∏—Ç–∞ ===
def generate_pdf_report(chat_id: int, url: str, result: dict, meta: dict, ssl_result: dict, mobile: dict, broken_links: dict, comparison: dict, expert_comment: str, uptime_chart: str = None, load_time_chart: str = None):
    """
    –°–æ–∑–¥–∞—ë—Ç PDF-–æ—Ç—á—ë—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É.
    """
    pdf = AuditPDF()
    pdf.add_page()
    pdf.set_auto_page_break(auto=True, margin=15)

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    pdf.add_title("üîç –ü–æ–ª–Ω—ã–π –∞—É–¥–∏—Ç —Å–∞–π—Ç–∞")
    pdf.add_paragraph(f"–°–∞–π—Ç: {url}")
    pdf.add_paragraph(f"–î–∞—Ç–∞: {datetime.now().strftime('%d.%m.%Y %H:%M')}")
    pdf.ln(10)

    # 1. –û–±—â–∞—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
    pdf.add_subtitle("üåê –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å")
    pdf.add_result_row("URL", result.get("url", ""), "‚úÖ" if result.get("is_ok") else "‚ùå")
    pdf.add_result_row("–°—Ç–∞—Ç—É—Å", result.get("status", "N/A"), "‚úÖ" if result.get("is_ok") else "‚ùå")
    pdf.add_result_row("–í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏", result.get("load_time", "N/A"))
    pdf.add_result_row("–†–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã", f"{result.get('size_kb', 'N/A')} KB")

    # 2. SSL
    pdf.add_subtitle("üîí SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç")
    if ssl_result.get("error"):
        pdf.add_paragraph(f"–û—à–∏–±–∫–∞: {ssl_result['error']}")
    else:
        pdf.add_result_row("–î–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω", "‚úÖ" if ssl_result.get("valid") else "‚ùå")
        pdf.add_result_row("–í—ã–¥–∞–Ω", ssl_result.get("issued_to", "N/A"))
        pdf.add_result_row("–ö–µ–º –≤—ã–¥–∞–Ω", ssl_result.get("issued_by", "N/A"))
        pdf.add_result_row("–ò—Å—Ç–µ–∫–∞–µ—Ç", ssl_result.get("expires", "N/A"))

    # 3. –ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è
    pdf.add_subtitle("üì± –ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è")
    pdf.add_result_row("–ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è", "‚úÖ" if mobile.get("is_ok") else "‚ùå")
    pdf.add_result_row("–í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏", mobile.get("load_time", "N/A"))
    pdf.add_result_row("–†–∞–∑–º–µ—Ä", f"{mobile.get('size_kb', 'N/A')} KB")

    # 4. SEO
    pdf.add_subtitle("üîé SEO –∏ –º–µ—Ç–∞—Ç–µ–≥–∏")
    pdf.add_result_row("Title", meta.get("title", "N/A"))
    pdf.add_result_row("Meta Description", meta.get("meta_description", "N/A"))
    pdf.add_result_row("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ H1", len(meta.get("h1", [])))
    for i, h1 in enumerate(meta.get("h1", [])[:3]):
        pdf.add_paragraph(f"H1 {i+1}: {h1}")

    pdf.add_result_row("OG Title", "‚úÖ" if meta["og_tags"].get("og:title") else "‚ùå")
    pdf.add_result_row("OG Description", "‚úÖ" if meta["og_tags"].get("og:description") else "‚ùå")
    pdf.add_result_row("OG Image", "‚úÖ" if meta["og_tags"].get("og:image") else "‚ùå")

    # 5. robots.txt –∏ sitemap.xml
    pdf.add_subtitle("üìÑ robots.txt –∏ sitemap.xml")
    pdf.add_result_row("robots.txt", "‚úÖ" if result.get("robots_exists") else "‚ùå")
    pdf.add_result_row("sitemap.xml", "‚úÖ" if result.get("sitemap_exists") else "‚ùå")

    # 6. –ë–∏—Ç—ã–µ —Å—Å—ã–ª–∫–∏
    pdf.add_subtitle("üîó –ë–∏—Ç—ã–µ —Å—Å—ã–ª–∫–∏")
    if broken_links.get("error"):
        pdf.add_paragraph(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {broken_links['error']}")
    else:
        pdf.add_paragraph(f"–ù–∞–π–¥–µ–Ω–æ –±–∏—Ç—ã—Ö —Å—Å—ã–ª–æ–∫: {broken_links.get('broken', 0)} –∏–∑ {broken_links.get('total', 0)}")
        for link in broken_links.get("links", [])[:10]:  # –¢–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 10
            if "404" in link["status"]:
                pdf.add_code_block(f"{link['url']} ‚Üí {link['status']}")

    # 7. –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–º
    pdf.add_subtitle("üÜö –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–º")
    pdf.add_paragraph(
        f"<strong>–í–∞—à —Å–∞–π—Ç:</strong><br>"
        f"‚Ä¢ –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏: {comparison['load_time']['your']}<br>"
        f"‚Ä¢ –†–∞–∑–º–µ—Ä: {comparison['size_kb']['your']} KB<br>"
        f"<strong>–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç:</strong><br>"
        f"‚Ä¢ –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏: {comparison['load_time']['comp']}<br>"
        f"‚Ä¢ –†–∞–∑–º–µ—Ä: {comparison['size_kb']['comp']} KB"
    )

    # 8. –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —ç–∫—Å–ø–µ—Ä—Ç–∞
    pdf.add_subtitle("üë®‚Äçüíª –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç –ë–æ—Ä–∏—Å–∞")
    pdf.set_font('Arial', '', 11)
    pdf.multi_cell(0, 6, expert_comment.replace("<strong>", "").replace("</strong>", ""))
    pdf.ln(5)

    # 9. –ì—Ä–∞—Ñ–∏–∫–∏
    if uptime_chart:
        pdf.add_subtitle("üìà –ò—Å—Ç–æ—Ä–∏—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏")
        pdf.add_image_from_base64(uptime_chart)

    if load_time_chart:
        pdf.add_subtitle("‚è± –ò—Å—Ç–æ—Ä–∏—è –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–≥—Ä—É–∑–∫–∏")
        pdf.add_image_from_base64(load_time_chart)

    # –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    pdf.add_subtitle("üìå –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")
    pdf.add_paragraph("‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –±–∏—Ç—ã–µ —Å—Å—ã–ª–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã.")
    pdf.add_paragraph("‚Ä¢ –£—Å–∫–æ—Ä—å—Ç–µ –∑–∞–≥—Ä—É–∑–∫—É —Å–∞–π—Ç–∞ —Å –ø–æ–º–æ—â—å—é —Å–∂–∞—Ç–∏—è –∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è.")
    pdf.add_paragraph("‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤ –∏ canonical.")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º PDF
    filename = f"reports/audit_{chat_id}_{int(datetime.now().timestamp())}.pdf"
    pdf.output(filename)
    return filename


logger.info("‚úÖ –ß–∞—Å—Ç—å 5/7: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF-–æ—Ç—á—ë—Ç–æ–≤ –≥–æ—Ç–æ–≤–∞")
